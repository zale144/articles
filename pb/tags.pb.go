// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tags.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type UserTagsReq struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserTagsReq) Reset()         { *m = UserTagsReq{} }
func (m *UserTagsReq) String() string { return proto.CompactTextString(m) }
func (*UserTagsReq) ProtoMessage()    {}
func (*UserTagsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e7d9cbcae1e528f6, []int{0}
}

func (m *UserTagsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserTagsReq.Unmarshal(m, b)
}
func (m *UserTagsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserTagsReq.Marshal(b, m, deterministic)
}
func (m *UserTagsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserTagsReq.Merge(m, src)
}
func (m *UserTagsReq) XXX_Size() int {
	return xxx_messageInfo_UserTagsReq.Size(m)
}
func (m *UserTagsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UserTagsReq.DiscardUnknown(m)
}

var xxx_messageInfo_UserTagsReq proto.InternalMessageInfo

func (m *UserTagsReq) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type UserTagsRsp struct {
	Tags                 []string `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserTagsRsp) Reset()         { *m = UserTagsRsp{} }
func (m *UserTagsRsp) String() string { return proto.CompactTextString(m) }
func (*UserTagsRsp) ProtoMessage()    {}
func (*UserTagsRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e7d9cbcae1e528f6, []int{1}
}

func (m *UserTagsRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserTagsRsp.Unmarshal(m, b)
}
func (m *UserTagsRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserTagsRsp.Marshal(b, m, deterministic)
}
func (m *UserTagsRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserTagsRsp.Merge(m, src)
}
func (m *UserTagsRsp) XXX_Size() int {
	return xxx_messageInfo_UserTagsRsp.Size(m)
}
func (m *UserTagsRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_UserTagsRsp.DiscardUnknown(m)
}

var xxx_messageInfo_UserTagsRsp proto.InternalMessageInfo

func (m *UserTagsRsp) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func init() {
	proto.RegisterType((*UserTagsReq)(nil), "pb.UserTagsReq")
	proto.RegisterType((*UserTagsRsp)(nil), "pb.UserTagsRsp")
}

func init() {
	proto.RegisterFile("tags.proto", fileDescriptor_e7d9cbcae1e528f6)
}

var fileDescriptor_e7d9cbcae1e528f6 = []byte{
	// 136 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0x49, 0x4c, 0x2f,
	0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x48, 0x52, 0x52, 0xe6, 0xe2, 0x0e, 0x2d,
	0x4e, 0x2d, 0x0a, 0x49, 0x4c, 0x2f, 0x0e, 0x4a, 0x2d, 0x14, 0x12, 0xe1, 0x62, 0x4d, 0xcd, 0x4d,
	0xcc, 0xcc, 0x91, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x82, 0x70, 0x94, 0x14, 0x91, 0x14, 0x15,
	0x17, 0x08, 0x09, 0x71, 0xb1, 0x80, 0x4c, 0x91, 0x60, 0x54, 0x60, 0xd6, 0xe0, 0x0c, 0x02, 0xb3,
	0x8d, 0x1c, 0xb8, 0xb8, 0x41, 0xd2, 0xc1, 0xa9, 0x45, 0x65, 0x99, 0xc9, 0xa9, 0x42, 0x86, 0x5c,
	0xdc, 0xee, 0xa9, 0x25, 0x30, 0x4d, 0x42, 0xfc, 0x7a, 0x05, 0x49, 0x7a, 0x48, 0xf6, 0x48, 0xa1,
	0x0a, 0x14, 0x17, 0x28, 0x31, 0x24, 0xb1, 0x81, 0x1d, 0x65, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff,
	0xbe, 0xef, 0x58, 0xd3, 0xa2, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TagsServiceClient is the client API for TagsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TagsServiceClient interface {
	GetUserTags(ctx context.Context, in *UserTagsReq, opts ...grpc.CallOption) (*UserTagsRsp, error)
}

type tagsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewTagsServiceClient(cc grpc.ClientConnInterface) TagsServiceClient {
	return &tagsServiceClient{cc}
}

func (c *tagsServiceClient) GetUserTags(ctx context.Context, in *UserTagsReq, opts ...grpc.CallOption) (*UserTagsRsp, error) {
	out := new(UserTagsRsp)
	err := c.cc.Invoke(ctx, "/pb.TagsService/GetUserTags", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TagsServiceServer is the server API for TagsService service.
type TagsServiceServer interface {
	GetUserTags(context.Context, *UserTagsReq) (*UserTagsRsp, error)
}

// UnimplementedTagsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTagsServiceServer struct {
}

func (*UnimplementedTagsServiceServer) GetUserTags(ctx context.Context, req *UserTagsReq) (*UserTagsRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserTags not implemented")
}

func RegisterTagsServiceServer(s *grpc.Server, srv TagsServiceServer) {
	s.RegisterService(&_TagsService_serviceDesc, srv)
}

func _TagsService_GetUserTags_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserTagsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TagsServiceServer).GetUserTags(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.TagsService/GetUserTags",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TagsServiceServer).GetUserTags(ctx, req.(*UserTagsReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _TagsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.TagsService",
	HandlerType: (*TagsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUserTags",
			Handler:    _TagsService_GetUserTags_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "tags.proto",
}
