version: "3.7"

volumes:
  articlespgvolume:
    name: articles-pg-volume
  mongodb_data_container:

networks:
  articlesnetwork:
    name: articles-network

services:
  pg:
    image: postgres:12.1
    restart: on-failure
    env_file:
      - .env
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - articlespgvolume:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - articlesnetwork
  mongo:
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${MONGO_USER}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGO_PASSWORD}"
    ports:
      - "${MONGO_PORT}:${MONGO_PORT}"
    volumes:
      - mongodb_data_container:/data/db
    networks:
      - articlesnetwork
  usertags:
    build:
      context: .
      dockerfile: usertags/Dockerfile
    restart: on-failure
    depends_on:
      - pg
    ports:
      - "${UT_HTTP_PORT}:${UT_HTTP_PORT}"
      - "${GRPC_PORT}:${GRPC_PORT}"
    networks:
      - articlesnetwork
    env_file:
      - .env
    entrypoint: ["/bin/bash", "./entrypoint.sh"]
  newsfeed:
    build:
      context: .
      dockerfile: newsfeed/Dockerfile
    restart: on-failure
    depends_on:
      - mongo
      - usertags
    ports:
      - "${NF_HTTP_PORT}:${NF_HTTP_PORT}"
    networks:
      - articlesnetwork
    env_file:
      - .env
    entrypoint: ["/bin/bash", "./entrypoint.sh"]
